version: '3.8'

services:
  n8n:
    image: n8nio/n8n:latest
    container_name: powerchip-n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=powerchip2024
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      # Configurações para integração com o e-commerce
      - ECOMMERCE_API_URL=http://host.docker.internal:3000
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - MERCADOPAGO_ACCESS_TOKEN=${MERCADOPAGO_ACCESS_TOKEN}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
      - ./n8n/credentials:/home/node/.n8n/credentials
    networks:
      - n8n_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Redis para cache e filas (opcional, mas recomendado para produção)
  redis:
    image: redis:7-alpine
    container_name: powerchip-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - n8n_network
    command: redis-server --appendonly yes

  # PostgreSQL para n8n (alternativa ao SQLite para produção)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: powerchip-n8n-db
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=n8n
  #     - POSTGRES_USER=n8n
  #     - POSTGRES_PASSWORD=n8n_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - n8n_network

volumes:
  n8n_data:
    driver: local
  redis_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  n8n_network:
    driver: bridge